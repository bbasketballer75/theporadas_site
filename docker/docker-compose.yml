services:
  mssql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: wedding-sql
    environment:
      ACCEPT_EULA: 'Y'
      MSSQL_SA_PASSWORD: ${MSSQL_SA_PASSWORD:-DevLocalStr0ng!Pass}
      MSSQL_PID: 'Developer'
    ports:
      - '14333:1433'
    volumes:
      - mssql_data:/var/opt/mssql
    healthcheck:
      test:
        [
          'CMD-SHELL',
          "/opt/mssql-tools18/bin/sqlcmd -C -S localhost -U sa -P '${MSSQL_SA_PASSWORD}' -Q 'SELECT 1' || exit 1",
        ]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped
  mcp_tavily:
    build:
      context: .
      dockerfile: Dockerfile.mcp
    container_name: mcp-tavily
    environment:
      TAVILY_API_KEY: ${TAVILY_API_KEY:-changeme}
      NODE_ENV: production
      MCP_HEALTH_PORT: 3010
      MCP_SERVER_NAME: tavily
      MCP_PROM_METRICS: 1
      MCP_ERROR_METRICS: 1
    command: ['scripts/mcp_tavily.mjs']
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'curl -fsS http://localhost:3010/healthz || exit 1']
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 15s
  mcp_notion:
    build:
      context: .
      dockerfile: Dockerfile.mcp
    container_name: mcp-notion
    environment:
      NOTION_API_KEY: ${NOTION_API_KEY:-changeme}
      NODE_ENV: production
      MCP_HEALTH_PORT: 3011
      MCP_SERVER_NAME: notion
      MCP_PROM_METRICS: 1
      MCP_ERROR_METRICS: 1
    command: ['scripts/mcp_notion.mjs']
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'curl -fsS http://localhost:3011/healthz || exit 1']
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 15s
  mcp_mem0:
    build:
      context: .
      dockerfile: Dockerfile.mcp
    container_name: mcp-mem0
    environment:
      MEM0_API_KEY: ${MEM0_API_KEY:-changeme}
      NODE_ENV: production
      MCP_HEALTH_PORT: 3012
      MCP_SERVER_NAME: mem0
      MCP_PROM_METRICS: 1
      MCP_ERROR_METRICS: 1
    command: ['scripts/mcp_mem0.mjs']
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'curl -fsS http://localhost:3012/healthz || exit 1']
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 15s
  mcp_sqlserver:
    build:
      context: .
      dockerfile: Dockerfile.mcp
    container_name: mcp-sqlserver
    depends_on:
      - mssql
    environment:
      SQLSERVER_CONNECTION_STRING: 'Server=mssql,1433;Database=master;User Id=sa;Password=${MSSQL_SA_PASSWORD};TrustServerCertificate=true;'
      NODE_ENV: production
      MCP_HEALTH_PORT: 3013
      MCP_SERVER_NAME: sqlserver
      MCP_PROM_METRICS: 1
      MCP_ERROR_METRICS: 1
    command: ['scripts/mcp_sqlserver.mjs']
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'curl -fsS http://localhost:3013/healthz || exit 1']
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 15s
  mcp_supervisor:
    build:
      context: .
      dockerfile: Dockerfile.mcp
    container_name: mcp-supervisor
    environment:
      SUPERVISED_SERVERS: fs,tavily,sse,notion,mem0,sqlserver,memoryBank,kgMemory,pythonExec,playwright,puppeteer,pieces,firebase,github,vectordb,scheduler,secrets,errorCodes,events,healthcheck,logging,rateLimit,rpcBase,testMetrics,smokeTest,smokeRunner
      NODE_ENV: production
      MCP_HEALTH_PORT: 3014
      MCP_SERVER_NAME: supervisor
      MCP_PROM_METRICS: 1
      MCP_ERROR_METRICS: 1
    command: ['scripts/mcp_supervisor.mjs', '--config', 'servers.json', '--heartbeat-ms', '30000']
    volumes:
      - ./memory-bank:/app/memory-bank:rw
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'curl -fsS http://localhost:3014/healthz || exit 1']
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 15s
  mcp_filesystem:
    build:
      context: .
      dockerfile: Dockerfile.mcp
    container_name: mcp-fs
    profiles: [mcp-local]
    environment:
      MCP_FS_ROOT: /data/fs
      NODE_ENV: production
      MCP_HEALTH_PORT: 3015
      MCP_SERVER_NAME: filesystem
      MCP_PROM_METRICS: 1
      MCP_ERROR_METRICS: 1
    volumes:
      - ./mcp_fs_sandbox:/data/fs
    entrypoint: ['node']
    command: ['scripts/mcp_filesystem.mjs']
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'curl -fsS http://localhost:3015/healthz || exit 1']
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 5s
  mcp_memory_bank:
    build:
      context: .
      dockerfile: Dockerfile.mcp
    container_name: mcp-memory-bank
    profiles: [mcp-local]
    environment:
      MCP_MEMORY_BANK_DIR: /app/memory-bank
      NODE_ENV: production
      MCP_HEALTH_PORT: 3016
      MCP_SERVER_NAME: memory-bank
      MCP_PROM_METRICS: 1
      MCP_ERROR_METRICS: 1
    volumes:
      - ./memory-bank:/app/memory-bank:rw
    command: ['scripts/mcp_memory_bank.mjs']
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'curl -fsS http://localhost:3016/healthz || exit 1']
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 5s
  mcp_kg_memory:
    build:
      context: .
      dockerfile: Dockerfile.mcp
    container_name: mcp-kg
    profiles: [mcp-local]
    environment:
      MCP_KG_MAX_TRIPLES: 5000
      NODE_ENV: production
      MCP_HEALTH_PORT: 3017
      MCP_SERVER_NAME: kg-memory
      MCP_PROM_METRICS: 1
      MCP_ERROR_METRICS: 1
    command: ['scripts/mcp_kg_memory.mjs']
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'curl -fsS http://localhost:3017/healthz || exit 1']
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 5s
  mcp_python:
    build:
      context: .
      dockerfile: Dockerfile.mcp-python
    container_name: mcp-python
    profiles: [mcp-local]
    environment:
      MCP_PY_TIMEOUT_MS: 3000
      NODE_ENV: production
      MCP_HEALTH_PORT: 3018
      MCP_SERVER_NAME: python-exec
      MCP_PROM_METRICS: 1
      MCP_ERROR_METRICS: 1
    command: ['scripts/mcp_python.mjs']
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'curl -fsS http://localhost:3018/healthz || exit 1']
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 5s
  mcp_playwright:
    build:
      context: .
      dockerfile: Dockerfile.mcp-browsers
    container_name: mcp-playwright
    profiles: [mcp-local]
    environment:
      MCP_PW_SESSION_LIMIT: 5
      MCP_PW_NAV_TIMEOUT_MS: 15000
      MCP_HEALTH_PORT: 3001
      NODE_ENV: production
      MCP_SERVER_NAME: playwright
      MCP_PROM_METRICS: 1
      MCP_ERROR_METRICS: 1
    command: ['scripts/mcp_playwright.mjs']
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'curl -fsS http://localhost:3001/healthz || exit 1']
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 5s
  mcp_puppeteer:
    build:
      context: .
      dockerfile: Dockerfile.mcp-browsers
    container_name: mcp-puppeteer
    profiles: [mcp-local]
    environment:
      MCP_PT_SESSION_LIMIT: 5
      MCP_PT_NAV_TIMEOUT_MS: 15000
      MCP_HEALTH_PORT: 3002
      NODE_ENV: production
      MCP_SERVER_NAME: puppeteer
      MCP_PROM_METRICS: 1
      MCP_ERROR_METRICS: 1
    command: ['scripts/mcp_puppeteer.mjs']
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'curl -fsS http://localhost:3002/healthz || exit 1']
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 5s
  mcp_pieces:
    build:
      context: .
      dockerfile: Dockerfile.mcp
    container_name: mcp-pieces
    profiles: [mcp-local]
    environment:
      PIECES_API_KEY: ${PIECES_API_KEY:-changeme}
      NODE_ENV: production
      MCP_HEALTH_PORT: 3019
      MCP_SERVER_NAME: pieces
      MCP_PROM_METRICS: 1
      MCP_ERROR_METRICS: 1
    command: ['scripts/mcp_pieces.mjs']
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'curl -fsS http://localhost:3019/healthz || exit 1']
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 5s
  mcp_firebase:
    build:
      context: .
      dockerfile: Dockerfile.mcp
    container_name: mcp-firebase
    profiles: [mcp-local]
    environment:
      FIREBASE_TOKEN: ${FIREBASE_TOKEN:-}
      GCLOUD_TOKEN: ${GCLOUD_TOKEN:-}
      NODE_ENV: production
      MCP_HEALTH_PORT: 3020
      MCP_SERVER_NAME: firebase
      MCP_PROM_METRICS: 1
      MCP_ERROR_METRICS: 1
    command: ['scripts/mcp_firebase.mjs']
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'curl -fsS http://localhost:3020/healthz || exit 1']
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 5s
  mcp_github:
    build:
      context: .
      dockerfile: Dockerfile.mcp
    container_name: mcp-github
    profiles: [mcp-local]
    environment:
      GITHUB_TOKEN: ${GITHUB_TOKEN:-}
      NODE_ENV: production
      MCP_HEALTH_PORT: 3021
      MCP_SERVER_NAME: github
      MCP_PROM_METRICS: 1
      MCP_ERROR_METRICS: 1
    command: ['scripts/mcp_github.mjs']
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'curl -fsS http://localhost:3021/healthz || exit 1']
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 5s
  mcp_vectordb:
    build:
      context: .
      dockerfile: Dockerfile.mcp
    container_name: mcp-vectordb
    profiles: [mcp-local]
    environment:
      VECTOR_DB_PATH: /app/.vectordb.jsonl
      NODE_ENV: production
      MCP_HEALTH_PORT: 3022
      MCP_SERVER_NAME: vectordb
      MCP_PROM_METRICS: 1
      MCP_ERROR_METRICS: 1
    command: ['scripts/mcp_vectordb.mjs']
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'curl -fsS http://localhost:3022/healthz || exit 1']
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 5s
  mcp_scheduler:
    build:
      context: .
      dockerfile: Dockerfile.mcp
    container_name: mcp-scheduler
    profiles: [mcp-local]
    environment:
      NODE_ENV: production
      MCP_HEALTH_PORT: 3023
      MCP_SERVER_NAME: scheduler
      MCP_PROM_METRICS: 1
      MCP_ERROR_METRICS: 1
    command: ['scripts/mcp_scheduler.mjs']
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'curl -fsS http://localhost:3023/healthz || exit 1']
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 5s
  mcp_secrets:
    build:
      context: .
      dockerfile: Dockerfile.mcp
    container_name: mcp-secrets
    profiles: [mcp-local]
    environment:
      NODE_ENV: production
      MCP_HEALTH_PORT: 3024
      MCP_SERVER_NAME: secrets
      MCP_PROM_METRICS: 1
      MCP_ERROR_METRICS: 1
    command: ['scripts/mcp_secrets.mjs']
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'curl -fsS http://localhost:3024/healthz || exit 1']
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 5s
  mcp_error_codes:
    build:
      context: .
      dockerfile: Dockerfile.mcp
    container_name: mcp-error-codes
    profiles: [mcp-local]
    environment:
      NODE_ENV: production
      MCP_HEALTH_PORT: 3025
      MCP_SERVER_NAME: error-codes
      MCP_PROM_METRICS: 1
      MCP_ERROR_METRICS: 1
    command: ['scripts/mcp_error_codes.mjs']
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'curl -fsS http://localhost:3025/healthz || exit 1']
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 5s
  mcp_events:
    build:
      context: .
      dockerfile: Dockerfile.mcp
    container_name: mcp-events
    profiles: [mcp-local]
    environment:
      NODE_ENV: production
      MCP_HEALTH_PORT: 3026
      MCP_SERVER_NAME: events
      MCP_PROM_METRICS: 1
      MCP_ERROR_METRICS: 1
    command: ['scripts/mcp_events.mjs']
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'curl -fsS http://localhost:3026/healthz || exit 1']
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 5s
  mcp_healthcheck:
    build:
      context: .
      dockerfile: Dockerfile.mcp
    container_name: mcp-healthcheck
    profiles: [mcp-local]
    environment:
      NODE_ENV: production
      MCP_HEALTH_PORT: 3027
      MCP_SERVER_NAME: healthcheck
      MCP_PROM_METRICS: 1
      MCP_ERROR_METRICS: 1
    command: ['scripts/mcp_healthcheck.mjs']
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'curl -fsS http://localhost:3027/healthz || exit 1']
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 5s
  mcp_logging:
    build:
      context: .
      dockerfile: Dockerfile.mcp
    container_name: mcp-logging
    profiles: [mcp-local]
    environment:
      NODE_ENV: production
      MCP_HEALTH_PORT: 3028
      MCP_SERVER_NAME: logging
      MCP_PROM_METRICS: 1
      MCP_ERROR_METRICS: 1
    command: ['scripts/mcp_logging.mjs']
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'curl -fsS http://localhost:3028/healthz || exit 1']
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 5s
  mcp_rate_limit:
    build:
      context: .
      dockerfile: Dockerfile.mcp
    container_name: mcp-rate-limit
    profiles: [mcp-local]
    environment:
      NODE_ENV: production
      MCP_HEALTH_PORT: 3029
      MCP_SERVER_NAME: rate-limit
      MCP_PROM_METRICS: 1
      MCP_ERROR_METRICS: 1
    command: ['scripts/mcp_rate_limit.mjs']
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'curl -fsS http://localhost:3029/healthz || exit 1']
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 5s
  mcp_rpc_base:
    build:
      context: .
      dockerfile: Dockerfile.mcp
    container_name: mcp-rpc-base
    profiles: [mcp-local]
    environment:
      NODE_ENV: production
      MCP_HEALTH_PORT: 3030
      MCP_SERVER_NAME: rpc-base
      MCP_PROM_METRICS: 1
      MCP_ERROR_METRICS: 1
    command: ['scripts/mcp_rpc_base.mjs']
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'curl -fsS http://localhost:3030/healthz || exit 1']
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 5s
  mcp_test_metrics:
    build:
      context: .
      dockerfile: Dockerfile.mcp
    container_name: mcp-test-metrics
    profiles: [mcp-local]
    environment:
      NODE_ENV: production
      MCP_HEALTH_PORT: 3031
      MCP_SERVER_NAME: test-metrics
      MCP_PROM_METRICS: 1
      MCP_ERROR_METRICS: 1
    command: ['scripts/mcp_test_metrics.mjs']
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'curl -fsS http://localhost:3031/healthz || exit 1']
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 5s
  mcp_smoke_test:
    build:
      context: .
      dockerfile: Dockerfile.mcp
    container_name: mcp-smoke-test
    profiles: [mcp-local]
    environment:
      NODE_ENV: production
      MCP_HEALTH_PORT: 3032
      MCP_SERVER_NAME: smoke-test
      MCP_PROM_METRICS: 1
      MCP_ERROR_METRICS: 1
    command: ['scripts/mcp_smoke_test.mjs']
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'curl -fsS http://localhost:3032/healthz || exit 1']
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 5s
  mcp_smoke_runner:
    build:
      context: .
      dockerfile: Dockerfile.mcp
    container_name: mcp-smoke-runner
    profiles: [mcp-local]
    environment:
      NODE_ENV: production
      MCP_HEALTH_PORT: 3033
      MCP_SERVER_NAME: smoke-runner
      MCP_PROM_METRICS: 1
      MCP_ERROR_METRICS: 1
    command: ['scripts/mcp_smoke_runner.mjs']
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'curl -fsS http://localhost:3033/healthz || exit 1']
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 5s
volumes:
  mssql_data:
    driver: local
