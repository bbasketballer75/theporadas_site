rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function isValidGuestMessage() {
      return request.resource.data.keys().hasAll(['guestName', 'message', 'timestamp', 'isRead', 'type']) &&
             request.resource.data.guestName is string &&
             request.resource.data.message is string &&
             request.resource.data.message.size() > 0 &&
             request.resource.data.message.size() < 1000 &&
             request.resource.data.timestamp is timestamp &&
             request.resource.data.isRead is bool &&
             request.resource.data.type in ['message', 'question', 'well_wish'];
    }

    function isValidFamilyMember() {
      return request.resource.data.keys().hasAll(['name', 'relationship']) &&
             request.resource.data.name is string &&
             request.resource.data.name.size() > 0 &&
             request.resource.data.name.size() < 100 &&
             request.resource.data.relationship is string;
    }

    // Family Members Collection
    // Allow read access for everyone (public family tree)
    // Allow write access for authenticated users only
    match /familyMembers/{document} {
      allow read: if true;
      allow create: if isAuthenticated() && isValidFamilyMember();
      allow update: if isAuthenticated() && isValidFamilyMember();
      allow delete: if isAuthenticated() && isOwner(resource.data.ownerId);
    }

    // Family Trees Collection
    // Allow read access for everyone
    // Allow write access for authenticated users only
    match /familyTrees/{document} {
      allow read: if true;
      allow write: if isAuthenticated();
    }

    // Guest Messages Collection
    // Allow read access for everyone (public guest book)
    // Allow create for authenticated users with validation
    // Allow update/delete for message owners or admins
    match /guestMessages/{document} {
      allow read: if true;
      allow create: if isAuthenticated() && isValidGuestMessage();
      allow update: if isAuthenticated() && (isOwner(resource.data.userId) || request.auth.token.admin == true);
      allow delete: if isAuthenticated() && (isOwner(resource.data.userId) || request.auth.token.admin == true);
    }

    // Guest Reactions Collection
    // Allow read access for everyone
    // Allow write access for authenticated users only
    match /guestReactions/{document} {
      allow read: if true;
      allow write: if isAuthenticated();
    }

    // Live Stats Collection (if using Firestore for stats)
    match /liveStats/{document} {
      allow read: if true;
      allow write: if false; // Only allow writes through Cloud Functions
    }

    // Default deny for any other collections
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
