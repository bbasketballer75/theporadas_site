name: synthetic-lighthouse-prod

on:
  schedule:
    - cron: '17 3 * * *' # Daily 03:17 UTC
  workflow_dispatch: {}

permissions:
  contents: read
  actions: read
  pages: read
  id-token: write
  issues: write

jobs:
  lighthouse:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Determine prod URL
        id: prod
        run: |
          echo "url=https://theporadas.com" >> $GITHUB_OUTPUT
      - name: Run Lighthouse (mobile)
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: ${{ steps.prod.outputs.url }}
          configPath: ./.lighthouserc.json
          budgetPath: ./lighthouse-budgets.json
          uploadArtifacts: true
          temporaryPublicStorage: true
      - name: Parse summary
        id: summary
        run: |
          perf=$(jq '.categories.performance.score' lighthouse-report.report.json)
          acc=$(jq '.categories.accessibility.score' lighthouse-report.report.json)
          echo "performance=$perf" >> $GITHUB_OUTPUT
          echo "accessibility=$acc" >> $GITHUB_OUTPUT
      - name: Enforce thresholds
        run: |
          perf=${{ steps.summary.outputs.performance }}
          acc=${{ steps.summary.outputs.accessibility }}
          awk 'BEGIN { exit !($perf >= 0.90 && $acc >= 0.95) }'
      - name: Create issue on failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const perf = process.env.PERF;
            const acc = process.env.ACC;
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Lighthouse regression: performance=${perf} accessibility=${acc}`,
              body: 'Daily synthetic lighthouse run failed threshold enforcement.'
            });
        env:
          PERF: ${{ steps.summary.outputs.performance }}
          ACC: ${{ steps.summary.outputs.accessibility }}
