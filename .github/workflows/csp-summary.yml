name: csp-summary

on:
  schedule:
    - cron: '11 4 * * *'
  workflow_dispatch: {}

permissions:
  contents: read
  issues: write

jobs:
  summarize:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - run: npm ci --omit=optional
      - name: Fetch recent CSP report logs (placeholder)
        run: |
          echo 'Implement log extraction (e.g., using Vercel CLI/API) piping JSONL here' > reports.jsonl
      - name: Summarize
        run: |
          node scripts/summarize_csp_reports.mjs < reports.jsonl > summary.json
          cat summary.json
      - name: Open or update issue
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const summary = JSON.parse(fs.readFileSync('summary.json','utf8'));
            const title = `CSP Daily Summary ${new Date().toISOString().slice(0,10)}`;
            const { data: issues } = await github.rest.issues.listForRepo({ owner: context.repo.owner, repo: context.repo.repo, state: 'open', labels: 'csp-summary' });
            let issue = issues.find(i => i.title.startsWith('CSP Daily Summary'));
            const body = `Total: ${summary.total}\nDistinct: ${summary.distinct}\nTop Violations:\n` + summary.top.map(v => `- ${v.key}: ${v.count}`).join('\n');
            if (!issue) {
              await github.rest.issues.create({ owner: context.repo.owner, repo: context.repo.repo, title, body, labels: ['csp-summary'] });
            } else {
              await github.rest.issues.createComment({ owner: context.repo.owner, repo: context.repo.repo, issue_number: issue.number, body });
            }
