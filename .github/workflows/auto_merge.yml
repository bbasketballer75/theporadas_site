name: Auto Merge (label gated)

on:
  pull_request:
    types: [labeled, reopened, ready_for_review, synchronize]

permissions:
  contents: write
  pull-requests: write

jobs:
  enable-auto-merge:
    if: >-
      github.event.pull_request != null &&
      contains(github.event.pull_request.labels.*.name, 'auto-merge')
    runs-on: ubuntu-latest
    steps:
      - name: Evaluate merge readiness
        id: criteria
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            if (!pr) { core.setOutput('ready','false'); return; }
            if (pr.draft) { core.notice('PR is draft'); core.setOutput('ready','false'); return; }
            const reviews = await github.paginate(github.rest.pulls.listReviews, {
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr.number,
              per_page: 100
            });
            const approvals = reviews.filter(r => r.state === 'APPROVED');
            const changesRequested = reviews.some(r => r.state === 'CHANGES_REQUESTED');
            if (changesRequested) { core.notice('Changes requested present'); core.setOutput('ready','false'); return; }
            if (approvals.length === 0) { core.notice('No approvals yet'); core.setOutput('ready','false'); return; }
            if (pr.mergeable === false) { core.notice(`Mergeable state currently ${pr.mergeable_state}`); core.setOutput('ready','false'); return; }
            core.setOutput('ready','true');
      - name: Enable GitHub auto-merge (rebase)
        if: steps.criteria.outputs.ready == 'true'
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          merge-method: REBASE
      - name: Fallback direct merge (if all checks already green)
        if: steps.criteria.outputs.ready == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            try {
              await github.rest.pulls.merge({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr.number,
                merge_method: 'rebase'
              });
              core.notice('PR merged directly (all checks passed).');
            } catch (e) {
              core.notice('Direct merge not performed (likely waiting on checks or protections) - auto-merge will handle. ' + e.message);
            }
