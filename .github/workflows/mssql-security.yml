name: MSSQL Security & Monitoring

on:
  pull_request:
    paths:
      - 'scripts/**'
      - 'src/**'
      - '.github/workflows/mssql-security.yml'
      - 'ENVIRONMENT_VARIABLES.md'
  schedule:
    - cron: '15 2 * * *'
  workflow_dispatch: {}

jobs:
  enforce-no-sa:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run sa usage enforcement
        shell: pwsh
        run: pwsh scripts/enforce_no_sa_usage.ps1

  archive-failed-logins:
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    env:
      MSSQL_SA_PASSWORD: ${{ secrets.MSSQL_SA_PASSWORD }}
      MSSQL_SERVER: ${{ secrets.MSSQL_SERVER }}
      MSSQL_MONITOR_USER: ${{ secrets.MSSQL_MONITOR_USER }}
      MSSQL_MONITOR_PASSWORD: ${{ secrets.MSSQL_MONITOR_PASSWORD }}
    # Optional: provide MSSQL_USER secret; defaults to sa when unset
    steps:
      - uses: actions/checkout@v4
      - name: Install sqlcmd (Debian)
        run: |
          sudo apt-get update
          sudo ACCEPT_EULA=Y apt-get install -y msodbcsql18 mssql-tools18 unixodbc-dev
          echo "/opt/mssql-tools18/bin" >> $GITHUB_PATH
      - name: Archive failed logins (monitor login preferred)
        shell: pwsh
        run: |
          if (-not "$env:MSSQL_SA_PASSWORD" -or -not "$env:MSSQL_SERVER") { Write-Host 'Missing required secrets MSSQL_SA_PASSWORD or MSSQL_SERVER. Skipping.'; exit 0 }
          if ($env:MSSQL_MONITOR_USER -and $env:MSSQL_MONITOR_PASSWORD) {
            Write-Host 'Using monitor login.'
            $pw = ConvertTo-SecureString $env:MSSQL_MONITOR_PASSWORD -AsPlainText -Force
            pwsh scripts/archive_failed_logins.ps1 -Server $env:MSSQL_SERVER -User $env:MSSQL_MONITOR_USER -Password $pw
          } else {
            Write-Host 'Monitor login secrets not set; falling back to sa.'
            $pw = ConvertTo-SecureString $env:MSSQL_SA_PASSWORD -AsPlainText -Force
            pwsh scripts/archive_failed_logins.ps1 -Server $env:MSSQL_SERVER -User sa -Password $pw
          }
      - name: Upload artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: failed-login-archive
          path: artifacts/failed-logins
