name: codeql-finalize-baseline

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["codeql"]
    types: [completed]
  push:
    branches: [main]
    paths:
      - scripts/codeql_baseline_snapshot.mjs
      - .github/workflows/codeql.yml
      - .github/workflows/codeql-finalize-baseline.yml

concurrency:
  group: finalize-codeql-baseline
  cancel-in-progress: false

permissions:
  contents: write
  security-events: read
  actions: read
  pull-requests: write

jobs:
  sanity:
    runs-on: ubuntu-latest
    steps:
      - name: Echo sanity
        run: echo 'Sanity job executed.'
  finalize:
    # Run on push / manual always; on workflow_run only if triggering workflow succeeded.
    # Previous expression may have caused evaluation issues leading to zero jobs.
    if: >-
      ${{ github.event_name != 'workflow_run' || (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') }}
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Debug event payload
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Workflow run conclusion (if any): ${{ github.event.workflow_run.conclusion }}"
          echo 'Event payload snippet:'
          cat $GITHUB_EVENT_PATH | head -c 4000 || true

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Derive triggering run metadata
        id: meta
        run: |
          set -euo pipefail
          if [ "${{ github.event_name }}" = "workflow_run" ]; then
            echo "run_id=${{ github.event.workflow_run.id }}" >> $GITHUB_OUTPUT
            echo "run_attempt=${{ github.event.workflow_run.run_attempt }}" >> $GITHUB_OUTPUT
          else
            echo "run_id=${{ github.run_id }}" >> $GITHUB_OUTPUT
            echo "run_attempt=${{ github.run_attempt }}" >> $GITHUB_OUTPUT
          fi
          echo "Using run metadata: id=$(grep run_id $GITHUB_OUTPUT || true) attempt=$(grep run_attempt $GITHUB_OUTPUT || true)" || true

      - name: Generate snapshot (with fallback)
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            GITHUB_REPOSITORY: ${{ github.repository }}
            CODEQL_RUN_NUMBER: ${{ steps.meta.outputs.run_id }}-${{ steps.meta.outputs.run_attempt }}
        run: |
          set -euo pipefail
          mkdir -p artifacts
          if ! node scripts/codeql_baseline_snapshot.mjs; then
            echo 'Snapshot script failed; writing fallback snippet.'
            cat > artifacts/codeql-baseline-snippet.md <<'EOF'
## CodeQL Baseline (Fallback)
Unable to enumerate alerts in finalize workflow. Manual verification required.
EOF
          fi
          test -s artifacts/codeql-baseline-snippet.md || { echo 'Missing snippet file'; exit 1; }

      - name: Replace placeholder section
        id: replace
        run: |
          set -euo pipefail
          placeholder='## CodeQL Baseline (Public Repo Transition Placeholder)'
          if ! grep -q "^$placeholder" SECURITY_NOTES.md; then
            echo 'placeholder_absent=true' >> $GITHUB_OUTPUT
            echo 'Placeholder already replaced; exiting early.'
            exit 0
          fi
          awk -v p="$placeholder" 'BEGIN{found=0} {
            if ($0 ~ "^"p) { found=1; exit } print
          }' SECURITY_NOTES.md > SECURITY_NOTES.new
          echo >> SECURITY_NOTES.new
          cat artifacts/codeql-baseline-snippet.md >> SECURITY_NOTES.new
          echo >> SECURITY_NOTES.new
          mv SECURITY_NOTES.new SECURITY_NOTES.md
          echo 'placeholder_absent=false' >> $GITHUB_OUTPUT

      - name: Commit baseline update
        if: steps.replace.outputs.placeholder_absent == 'false'
        run: |
          set -euo pipefail
          git config user.name 'github-actions'
          git config user.email 'github-actions@users.noreply.github.com'
          # Only commit SECURITY_NOTES.md (artifacts/ is gitignored by design)
          git add SECURITY_NOTES.md || true
          if git diff --cached --quiet; then
            echo 'No changes to commit.'
            exit 0
          fi
            git commit -m 'chore(security): finalize CodeQL baseline (closes #24)' || exit 0
          if git push; then
            echo 'push_success=1' >> $GITHUB_ENV
          else
            echo 'push_success=0' >> $GITHUB_ENV
          fi

      - name: Create PR fallback
        if: steps.replace.outputs.placeholder_absent == 'false' && env.push_success != '1'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          branch="chore/codeql-baseline-finalize"
          if ! git rev-parse --verify $branch 2>/dev/null; then
            git checkout -b $branch
          else
            git checkout $branch
          fi
          # Ensure changes are staged on branch
          git add SECURITY_NOTES.md || true
          if git diff --cached --quiet; then
            echo 'No staged changes to create PR.'
            exit 0
          fi
          git commit -m 'chore(security): finalize CodeQL baseline (closes #24)' || true
          git push --set-upstream origin "$branch" || true
          # Attempt PR creation (idempotent if exists)
          gh pr create --fill --base main --head "$branch" || echo 'PR creation skipped (possibly exists).'

      - name: Summary
        run: |
          echo 'Finalize workflow completed.'
          ls -l artifacts || true
