name: visual-regression

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [main]
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write
  actions: read

jobs:
  visual-regression:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - name: Install deps
        run: npm ci
      - name: Install Playwright browsers
        run: npx playwright install --with-deps
      - name: Build site
        run: npm run build
      - name: Start preview
        run: |
          echo 'Starting Vite preview on port 5173...'
          npm run preview > preview.log 2>&1 &
          echo $! > preview.pid
          sleep 2
          echo 'Preview process started with PID:' $(cat preview.pid)
      - name: Wait for server
        run: |
          npx wait-on --timeout=180000 --interval=500 http://localhost:5173 || (echo 'Initial wait-on failed; printing preview.log' && sed -n '1,200p' preview.log && exit 1)
          echo 'Server responded. Fetching status:'
          curl -I http://localhost:5173 || true
          echo 'First 100 lines of preview.log:'
          sed -n '1,100p' preview.log || true
      - name: Upload preview log (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: preview-log
          path: preview.log
      - name: Download baseline snapshots (from main)
        if: github.event_name == 'pull_request'
        run: |
          echo "Attempting to download baseline snapshots artifact from latest main run";
          latest_run_id=$(gh run list --branch main --workflow "visual-regression" --limit 1 --json databaseId --jq '.[0].databaseId') || true
          if [ -n "$latest_run_id" ]; then
            echo "Found run id $latest_run_id; listing artifacts";
            artifact_id=$(gh run artifacts $latest_run_id --json artifacts --jq '.artifacts[] | select(.name=="playwright-snapshots") | .id') || true
            if [ -n "$artifact_id" ]; then
              echo "Downloading artifact id $artifact_id";
              gh run download $latest_run_id -n playwright-snapshots --dir baseline || true
              if [ -d baseline/playwright-snapshots ]; then
                mkdir -p test/__snapshots__
                cp -R baseline/playwright-snapshots/* test/__snapshots__/ || true
                echo "Baseline snapshots restored.";
              else
                echo "Artifact directory missing; proceeding without baselines.";
              fi
            else
              echo "No playwright-snapshots artifact found in latest main run.";
            fi
          else
            echo "No prior main run found for visual-regression workflow.";
          fi
      - name: Run visual tests
        run: npx playwright test
      - name: Upload snapshots (main branch)
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: playwright-snapshots
          path: test/__snapshots__
      - name: Upload traces (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-traces
          path: playwright-report
