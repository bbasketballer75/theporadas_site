name: History Rewrite (Large Blobs Removal)

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      confirm:
        description: "Type YES to confirm destructive history rewrite (only for non-dry run)"
        required: false
        default: ""
      dry_run:
        description: "true = diagnostics only; false = allow rewrite (with confirm)"
        required: false
        default: "true"

jobs:
  rewrite:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout full history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Pre size + head
        run: |
          git count-objects -vH || true
          git rev-parse HEAD > pre_rewrite_head.txt

      - name: Baseline largest blobs
        run: |
          for idx in .git/objects/pack/pack-*.idx; do
            git verify-pack -v "$idx" | awk '/ blob /{print $1, $3}';
          done | sort -k2 -n | tail -50 > baseline_largest_blobs.txt
          tail -10 baseline_largest_blobs.txt

      - name: Target list (pre)
        run: |
          printf "%s\n" \
            30200ab4e2da2bbc2bcb44f51cc4447f7056fae8 \
            bf52f84b4f2af2b9234134ee132c3aadbcd80e5f \
            6624a873c4920cfa1292299928f45334fd37b0c9 \
            3468993b47ee0ff0c7bc511ab07185ef28288f9e \
            2ebc57c388733ccc76a78884f146563f06cfa9c1 \
            a57d0977d6389efb225783cdd6cf042e31ea3160 \
            25deff980b97d1bd3ff06b19e4e2eed51dd4c64c \
            a3c16f6c270d9780ac8cd88085f0a351e8cbf674 > target_blobs.txt
          while read sha; do
            if git cat-file -t "$sha" >/dev/null 2>&1; then echo "$sha PRESENT"; else echo "$sha MISSING"; fi;
          done < target_blobs.txt > target_presence_pre.txt
          cat target_presence_pre.txt

      - name: Install git-filter-repo
        run: |
          pipx install git-filter-repo || pip install --user git-filter-repo
          python -c "import git_filter_repo; print('git-filter-repo available')"

      - name: Destructive rewrite
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.dry_run != 'true' && github.event.inputs.confirm == 'YES' }}
        run: |
          echo 'Performing destructive rewrite'
          python scripts/large_blob_rewrite.py

      - name: Aggressive GC
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.dry_run != 'true' && github.event.inputs.confirm == 'YES' }}
        run: |
          git reflog expire --all --expire=now
          git gc --prune=now --aggressive
          git repack -adf

      - name: Post (size)
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.dry_run != 'true' && github.event.inputs.confirm == 'YES' }}
        run: git count-objects -vH

      - name: Largest blobs (post)
        run: |
          for idx in .git/objects/pack/pack-*.idx; do
            git verify-pack -v "$idx" | awk '/ blob /{print $1, $3}' | sort -k2 -n | tail -20;
          done | tee rewrite_largest_blobs.txt

      - name: Target presence (post)
        run: |
          while read sha; do if git cat-file -t "$sha" >/dev/null 2>&1; then echo "$sha PRESENT"; else echo "$sha MISSING"; fi; done < target_blobs.txt > target_presence_post.txt
          cat target_presence_post.txt

      - name: Diff report
        run: |
          awk '{print $1":"$2}' baseline_largest_blobs.txt | sort > baseline.tmp
          awk '{print $1":"$2}' rewrite_largest_blobs.txt | sort > post.tmp
          comm -23 baseline.tmp post.tmp > removed_blobs.txt || true
          {
            echo 'Removed (or shrunk) blobs (may include unreachable yet):';
            cat removed_blobs.txt;
            echo 'Top 20 after rewrite:';
            cat rewrite_largest_blobs.txt;
            echo 'Target blob presence pre:';
            cat target_presence_pre.txt;
            echo 'Target blob presence post:';
            cat target_presence_post.txt;
          } > diff_report.txt
          tail -25 diff_report.txt

      - name: Upload diagnostics
        uses: actions/upload-artifact@v4
        with:
          name: rewrite-diagnostics
          path: |
            baseline_largest_blobs.txt
            rewrite_largest_blobs.txt
            diff_report.txt
            target_presence_pre.txt
            target_presence_post.txt
            pre_rewrite_head.txt

      - name: Force push rewritten history
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.dry_run != 'true' && github.event.inputs.confirm == 'YES' && github.ref == 'refs/heads/main' }}
        run: |
          git push --force --all
          git push --force --tags

      - name: Summary
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "Workflow dispatch invoked." >> $GITHUB_STEP_SUMMARY
            echo "dry_run=${{ github.event.inputs.dry_run }}" >> $GITHUB_STEP_SUMMARY
            if [ "${{ github.event.inputs.dry_run }}" != "true" ] && [ "${{ github.event.inputs.confirm }}" = "YES" ]; then
              echo "Destructive rewrite executed." >> $GITHUB_STEP_SUMMARY
            else
              echo "Destructive rewrite NOT executed (dry run or missing confirmation)." >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "Push-triggered diagnostics run (no destructive rewrite)." >> $GITHUB_STEP_SUMMARY
          fi
          echo "Target blob presence post:" >> $GITHUB_STEP_SUMMARY
          cat target_presence_post.txt >> $GITHUB_STEP_SUMMARY
