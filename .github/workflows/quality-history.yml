name: Quality History

on:
  push:
    branches: [main]
  schedule:
    - cron: '0 5 * * *'
  workflow_dispatch:
    inputs:
      light:
        description: 'Skip Lighthouse & gating (quick run)'
        required: false
        default: 'false'
      skipLighthouse:
        description: 'Skip only Lighthouse steps'
        required: false
        default: 'false'

permissions:
  contents: write

concurrency:
  group: quality-history-${{ github.ref }}
  cancel-in-progress: true

jobs:
  quality:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Use Node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'
      - name: Install deps
        run: npm ci
      - name: Run tests with coverage
        run: npm test -- --coverage
      - name: Run Lighthouse (LHCI)
        if: ${{ inputs.light != 'true' && inputs.skipLighthouse != 'true' }}
        run: npm run lighthouse:snapshot || echo 'Lighthouse snapshot failed (non-blocking)'
      - name: Lighthouse diff (optional)
        if: ${{ inputs.light != 'true' && inputs.skipLighthouse != 'true' }}
        run: npm run lighthouse:diff || echo 'Lighthouse diff skipped'
      - name: Export Tavily key (if set)
        run: |
          if [ -n "${{ secrets.TAVILY_API_KEY }}" ]; then
            echo "TAVILY_API_KEY=${{ secrets.TAVILY_API_KEY }}" >> $GITHUB_ENV
          else
            echo 'No Tavily key present.'
          fi
      - name: Append quality history
        run: node scripts/append_quality_history.mjs
      - name: Show last history entry
        run: |
          if [ -f quality-history.jsonl ]; then
            echo 'Last history entry:'
            tail -n 1 quality-history.jsonl || true
          else
            echo 'No quality-history.jsonl present yet.'
          fi
      - name: Analyze quality history
        run: node scripts/analyze_quality_history.mjs > artifacts/quality-analysis-latest.txt
      - name: Regression check (Lighthouse)
        run: npm run quality:regression-check || echo 'Regression check failed or skipped'
      - name: Regression gating
        if: ${{ inputs.light != 'true' }}
        run: npm run quality:regression-check
        env:
          MAX_COVERAGE_DROP: '0.5'
          MAX_PERF_DROP: '3'
      - name: Lightweight mode notice
        if: ${{ inputs.light == 'true' }}
        run: |
          echo "Lightweight mode enabled: skipped Lighthouse & regression gating."
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: quality-artifacts
          path: |
            artifacts/
            quality-history.jsonl
      - name: Commit updated quality history
        run: |
          if git diff --quiet quality-history.jsonl; then
            echo 'No quality history changes.'
          else
            git config user.name 'github-actions'
            git config user.email 'actions@users.noreply.github.com'
            git add quality-history.jsonl artifacts/quality-analysis-latest.txt || true
            git commit -m 'chore(quality): append history [skip ci]' || echo 'Nothing to commit'
            git push
          fi
