name: Lighthouse CI

on:
  pull_request:
    branches: [main]
    paths:
      - 'src/**'
      - 'index.html'
      - 'package.json'
      - 'package-lock.json'
      - 'vite.config.ts'
      - 'lighthouserc.json'
      - '.github/workflows/lighthouse_ci.yml'
  push:
    branches: [main]
    paths:
      - 'src/**'
      - 'index.html'
      - 'package.json'
      - 'package-lock.json'
      - 'vite.config.ts'
      - 'lighthouserc.json'
      - '.github/workflows/lighthouse_ci.yml'
  workflow_dispatch: {}

jobs:
  lhci:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Use Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - name: Install deps
        run: npm ci
      - name: Build site
        run: npm run build
      - name: Start preview
        run: npx vite preview --port 4173 &
      - name: Wait for server
        run: npx wait-on http://localhost:4173/
      - name: Run Lighthouse CI
        run: npx @lhci/cli autorun --config=lighthouserc.json || echo "LHCI completed (asserts may warn)"
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
      - name: Snapshot Lighthouse assertions (main only)
        if: github.ref == 'refs/heads/main'
        run: |
          node scripts/lhci_snapshot.mjs
      - name: Upload Lighthouse snapshot artifact (main only)
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-assertions-snapshot
          path: artifacts/lighthouse-assertions.json
      - name: Download previous Lighthouse snapshot (PR only)
        if: github.event_name == 'pull_request'
        uses: actions/download-artifact@v4
        with:
          name: lighthouse-assertions-snapshot
          path: prev
        continue-on-error: true
      - name: Diff Lighthouse assertions (PR only)
        if: github.event_name == 'pull_request'
        run: |
          if [ -f prev/lighthouse-assertions.json ]; then cp prev/lighthouse-assertions.json prev-lighthouse-assertions.json; fi
          node scripts/lhci_snapshot.mjs
          node scripts/lhci_diff.mjs
      - name: Upload Lighthouse diff (PR only)
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-assertions-diff
          path: artifacts/lighthouse-assertions-diff.md
      - name: Comment Lighthouse diff on PR (PR only)
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = 'artifacts/lighthouse-assertions-diff.md';
            if (!fs.existsSync(path)) {
              core.warning('Lighthouse diff markdown not found; skipping comment');
              return;
            }
            const body = fs.readFileSync(path, 'utf8');
            const marker = '<!-- lighthouse-assertions-diff -->';
            const prNumber = context.payload.pull_request.number;
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              per_page: 100,
            });
            const existing = comments.find(c => c.body && c.body.includes(marker));
            const fullBody = `${marker}\n### Lighthouse Assertions Diff\n\n${body}`;
            if (existing) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existing.id,
                body: fullBody,
              });
              core.info('Updated existing Lighthouse diff comment');
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: fullBody,
              });
              core.info('Created new Lighthouse diff comment');
            }
      - name: Observational axe best-practice run (PR only)
        if: github.event_name == 'pull_request'
        run: |
          npx cross-env A11Y_INCLUDE_BEST_PRACTICES=1 A11Y_BEST_OUTPUT=1 npm run test -- --run test/accessibility.test.tsx test/KeyboardNav.a11y.test.tsx || true
      - name: Upload axe best-practice violations (PR only)
        if: github.event_name == 'pull_request' && always()
        uses: actions/upload-artifact@v4
        with:
          name: axe-best-practices-violations
          path: artifacts/axe-best-practices-violations.json
      # ----------------------------------------------------------------------------
      # Future Enforcement (Phase 2)
      # Once baseline established, uncomment the step below to enforce thresholds.
      # Set A11Y_BEST_ENFORCE=1 and optionally tune per-rule thresholds.
      # Default thresholds (0) mean no violations allowed; start with current counts.
      # env:
      #   A11Y_BEST_ENFORCE: '1'
      #   A11Y_THRESHOLD_HEADING_ORDER: '0'
      #   A11Y_THRESHOLD_REGION: '0'
      # - name: Enforce axe best-practice thresholds (PR only)
      #   if: github.event_name == 'pull_request'
      #   run: |
      #     npm run a11y:best:enforce
      - name: Upload Lighthouse HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-report
          path: '**/lighthouse-*.report.html'
