name: Bundle Size Monitor

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write
  checks: write

jobs:
  bundle-size-check:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Check bundle sizes
        id: bundle-check
        run: npm run build:check-size

      - name: Download baseline bundle sizes
        if: always()
        uses: actions/download-artifact@v4
        with:
          name: bundle-sizes-baseline
          path: baseline-data
        continue-on-error: true

      - name: Compare with baseline
        if: always()
        run: |
          if [ -f baseline-data/bundle-sizes-baseline.json ]; then
            cp baseline-data/bundle-sizes-baseline.json bundle-sizes-baseline.json
            npm run build:compare-size bundle-sizes.json bundle-sizes-baseline.json
          else
            echo "No baseline available for comparison"
          fi
      - name: Upload comparison data
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: bundle-comparison-${{ github.sha }}
          path: bundle-size-comparison.json
          retention-days: 30
      - name: Upload bundle size data
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: bundle-sizes-${{ github.sha }}
          path: bundle-sizes.json
          retention-days: 30

      - name: Generate bundle size report
        if: always()
        run: |
          node -e "
          const fs = require('fs');
          if (fs.existsSync('bundle-sizes.json')) {
            const data = JSON.parse(fs.readFileSync('bundle-sizes.json', 'utf8'));
            const exceeded = data.files.filter(f => f.exceeded);
            const totalSize = (data.totalSize / 1024 / 1024).toFixed(2);

            console.log('## üì¶ Bundle Size Report');
            console.log('');
            console.log('| File | Size | Threshold | Status |');
            console.log('|------|------|-----------|--------|');
            data.files.forEach(file => {
              const status = file.exceeded ? '‚ùå Exceeded' : '‚úÖ OK';
              const sizeMB = (file.size / 1024 / 1024).toFixed(2);
              console.log(\`| \${file.file} | \${sizeMB}MB | \${file.threshold}KB | \${status} |\`);
            });
            console.log('');
            console.log(\`**Total Size:** \${totalSize}MB\`);
            console.log(\`**Files Exceeding Threshold:** \${exceeded.length}\`);
            console.log('');
            if (exceeded.length > 0) {
              console.log('### üö® Files Exceeding Thresholds:');
              exceeded.forEach(file => {
                console.log(\`- \${file.file}: \${file.sizeKB}KB (exceeded by \${file.delta}KB)\`);
              });
            }
          } else {
            console.log('No bundle size data found');
          }
          " > bundle-size-report.md

      - name: Comment PR with bundle size report
        if: github.event_name == 'pull_request' && always()
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          recreate: true
          path: bundle-size-report.md

      - name: Bundle size check result
        if: always()
        run: |
          if [ -f bundle-sizes.json ]; then
            EXCEEDED=$(node -e "console.log(JSON.parse(require('fs').readFileSync('bundle-sizes.json')).exceededCount)")
            if [ "$EXCEEDED" -gt 0 ]; then
              echo "‚ùå Bundle size check failed: $EXCEEDED files exceed size thresholds"
              exit 1
            else
              echo "‚úÖ Bundle size check passed: All files within size limits"
            fi
          else
            echo "‚ö†Ô∏è  Bundle size data not found"
            exit 1
          fi

  bundle-size-baseline:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: bundle-size-check

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download bundle size artifact
        uses: actions/download-artifact@v4
        with:
          name: bundle-sizes-${{ github.sha }}

      - name: Store baseline bundle sizes
        run: |
          if [ -f bundle-sizes.json ]; then
            cp bundle-sizes.json bundle-sizes-baseline.json
            echo "Baseline bundle sizes stored for future comparisons"
          else
            echo "No bundle size data to store as baseline"
          fi

      - name: Upload baseline artifact
        uses: actions/upload-artifact@v4
        with:
          name: bundle-sizes-baseline
          path: bundle-sizes-baseline.json
          retention-days: 365