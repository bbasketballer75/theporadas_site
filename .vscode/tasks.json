{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "Start MCP Filesystem Server",
      "type": "shell",
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-filesystem",
        "C:/Users/Austin/Documents/theporadas_site"
      ],
      "isBackground": true,
      "problemMatcher": []
    },
    {
      "label": "Start MCP Git Server",
      "type": "shell",
      "command": "node",
      "args": [
        "C:/Users/Austin/Documents/GitHub/servers/src/git/dist/index.js"
      ],
      "isBackground": true,
      "problemMatcher": []
    },
    {
      "label": "Start MCP Memory Server",
      "type": "shell",
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-memory"],
      "isBackground": true,
      "problemMatcher": []
    },
    {
      "label": "Start MCP Brave Search Server",
      "type": "shell",
      "command": "pwsh",
      "args": ["-File", "start-brave-search.ps1"],
      "isBackground": true,
      "problemMatcher": []
    },
    {
      "label": "Start MCP Puppeteer Server",
      "type": "shell",
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-puppeteer"],
      "isBackground": true,
      "problemMatcher": []
    },
    {
      "label": "Start MCP Sequential Thinking Server",
      "type": "shell",
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-sequential-thinking"],
      "isBackground": true,
      "problemMatcher": []
    },
    {
      "label": "Start MCP Postgres Server",
      "type": "shell",
      "command": "pwsh -c \"npx -y @modelcontextprotocol/server-postgres $(Get-Content 'C:/Users/Austin/Documents/theporadas_site/.env' | Select-String '^PG_URL=' | ForEach-Object { $_.ToString().Split('=')[1].Trim() })\"",
      "args": [],
      "isBackground": true,
      "problemMatcher": []
    },
    {
      "label": "Start MCP Playwright Server",
      "type": "shell",
      "command": "npx",
      "args": ["@playwright/mcp@latest"],
      "isBackground": true,
      "problemMatcher": []
    },
    {
      "label": "Start All MCP Servers",
      "dependsOn": [
        "Start MCP Filesystem Server",
        "Start MCP Git Server",
        "Start MCP Memory Server",
        "Start MCP Brave Search Server",
        "Start MCP Puppeteer Server",
        "Start MCP Sequential Thinking Server",
        "Start MCP Postgres Server",
        "Start MCP Playwright Server"
      ],
      "dependsOrder": "parallel",
      "group": {
        "kind": "build",
        "isDefault": true
      }
    },
    {
      "label": "Start All MCP Servers (script)",
      "type": "shell",
      "command": "npm",
      "args": ["run", "start:mcp"],
      "isBackground": true,
      "presentation": {
        "panel": "shared",
        "reveal": "always",
        "echo": true,
        "focus": false,
        "showReuseMessage": true,
        "clear": false
      },
      "problemMatcher": []
    },
    {
      "label": "Terminate MCP Servers (PID)",
      "type": "shell",
      "command": "npm",
      "args": ["run", "stop:mcp"],
      "presentation": {
        "panel": "shared",
        "reveal": "always",
        "echo": true
      },
      "problemMatcher": []
    },
    {
      "label": "Terminate MCP Servers (kill ports)",
      "type": "shell",
      "command": "npm",
      "args": ["run", "stop:mcp:kill-ports"],
      "presentation": {
        "panel": "shared",
        "reveal": "always",
        "echo": true
      },
      "problemMatcher": []
    },
    {
      "label": "Monitor MCP Servers (once)",
      "type": "shell",
      "command": "npm",
      "args": ["run", "monitor:mcp"],
      "presentation": { "panel": "shared", "reveal": "always", "echo": true },
      "problemMatcher": []
    },
    {
      "label": "Monitor MCP Servers (watch)",
      "type": "shell",
      "command": "npm",
      "args": ["run", "monitor:mcp:watch"],
      "presentation": { "panel": "shared", "reveal": "always", "echo": true },
      "problemMatcher": []
    },
    {
      "label": "Start single MCP service",
      "type": "shell",
      "command": "npm",
      "args": ["run", "start:mcp:service", "--"],
      "presentation": { "panel": "shared", "reveal": "always", "echo": true },
      "problemMatcher": []
    }
  ]
}
