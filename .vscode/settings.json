{
  "github.copilotChat.model": "gpt-5",
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "editor.formatOnSave": true,
  "github.copilot.enable": {
    "*": true
  },
  "github.copilot.editor.enableAutoCompletions": true,
  "python.terminal.useEnvFile": true,
  "python.envFile": "${workspaceFolder}/.env",
  "eslint.validate": ["javascript", "javascriptreact", "typescript", "typescriptreact"],
  "terminal.integrated.cwd": "${workspaceFolder}",
  "terminal.integrated.splitCwd": "workspaceRoot",
  "powershell.cwd": "${workspaceFolder}",
  "python-envs.defaultEnvManager": "ms-python.python:system",
  "python-envs.pythonProjects": [],
  // Exclude procedural markdown checklists (PR/issue templates, self review) from TODO scanners.
  "todo-tree.filtering.excludeGlobs": [
    "**/docs/self_review_checklist.md",
    "**/.github/pull_request_template.md",
    "**/.github/ISSUE_TEMPLATE/**",
    "**/.github/project_instructions.md",
    "**/CHANGELOG.md",
    "**/coverage/**",
    "**/CONTRIBUTING.md", // treat as process doc; actionable dev TODOs should live in code comments
    "**/lighthouse/**", // vendored upstream; upstream TODOs tracked externally
    "**/docs/accessibility_performance_plan.md" // plan tasks now tracked as GitHub issues #8-#15
  ],
  // Ensure VS Code sessions (especially extension host) see concrete Node paths (mitigates %NVM_HOME% unresolved placeholders)
  "terminal.integrated.env.windows": {
    "NVM_HOME": "${env:LOCALAPPDATA}\\nvm",
    "NVM_SYMLINK": "${env:LOCALAPPDATA}\\nodejs",
    "PATH": "${env:LOCALAPPDATA}\\nodejs;${env:APPDATA}\\npm;${env:PATH}"
  },
  // Hint vitest extension to use npx invocation (resolves when global node not auto-detected)
  "vitest.commandLine": "npx vitest",
  "vitest.workspaceConfigPath": "vitest.config.ts"
}
